swagger: "2.0"
info:
  title: Task Management API
  version: 1.0.0
  description: API for managing users and their tasks
basePath: /api
schemes:
  - http
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      parameters:
        - in: body
          name: user
          schema:
            type: object
            required:
              - username
              - email
              - password
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      parameters:
        - in: body
          name: credentials
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get user tasks
      security:
        - Bearer: []
      responses:
        200:
          description: List of tasks
        401:
          description: Unauthorized
    post:
      tags:
        - Tasks
      summary: Create a new task
      security:
        - Bearer: []
      parameters:
        - in: body
          name: task
          schema:
            type: object
            required:
              - title
              - description
              - dueDate
            properties:
              title:
                type: string
              description:
                type: string
              dueDate:
                type: string
                format: date-time
      responses:
        201:
          description: Task created successfully
        400:
          description: Invalid input
  /tasks/{taskId}:
    put:
      tags:
        - Tasks
      summary: Update a task
      security:
        - Bearer: []
      parameters:
        - in: path
          name: taskId
          required: true
          type: string
        - in: body
          name: task
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              dueDate:
                type: string
                format: date-time
      responses:
        200:
          description: Task updated successfully
        404:
          description: Task not found
    delete:
      tags:
        - Tasks
      summary: Delete a task
      security:
        - Bearer: []
      parameters:
        - in: path
          name: taskId
          required: true
          type: string
      responses:
        204:
          description: Task deleted successfully
        404:
          description: Task not found
